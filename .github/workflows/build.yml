name: Build & deploy

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
  BUILD_NAME: ${{ secrets.BUILD_NAME }}
  UNITY_VERSION: ${{ secrets.UNITY_VERSION }}

on:
  workflow_dispatch: {}
  push:
    tags:
      - "*.*.*"

jobs:
  testAndBuild:
    name: ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Log RELEASE_VERSION
        run: echo RELEASE_VERSION -> ${{ env.RELEASE_VERSION }}

      - name: Patch manifest.json
        run: chmod +x ${{ matrix.projectPath }}Scripts/replace-manifest-github-url.sh && ${{ matrix.projectPath }}Scripts/replace-manifest-github-url.sh
        env:
          PRIVATE_TOKEN: ${{ secrets.PRIVATE_TOKEN }}

      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-

      - uses: actions/cache@v1.1.0
        with:
          key: Library
          path: ./Library

      - name: Activate Unity
        uses: webbertakken/unity-activate@v1.3

      - name: Build (Windows)
        uses: webbertakken/unity-builder@v2.0-alpha-6
        with:
          projectPath: ./
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: StandaloneWindows64
          buildName: ${{ env.BUILD_NAME }}
          buildMethod: UnityBuilderAction.Builder.BuildProject
          versioning: Custom
          version: ${{ env.RELEASE_VERSION }}

      # - name: Build (MacOS)
      #   uses: webbertakken/unity-builder@v2.0-alpha-6
      #   with:
      #     projectPath: ./
      #     unityVersion: ${{ env.UNITY_VERSION }}
      #     targetPlatform: StandaloneOSX
      #     buildName: ${{ env.BUILD_NAME }}
      #     buildMethod: UnityBuilderAction.Builder.BuildProject
      #     versioning: Custom
      #     version: ${{ env.RELEASE_VERSION }}

      - name: Build (Linux)
        uses: webbertakken/unity-builder@v2.0-alpha-6
        with:
          projectPath: ./
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: StandaloneLinux64
          buildName: ${{ env.BUILD_NAME }}
          buildMethod: UnityBuilderAction.Builder.BuildProject
          versioning: Custom
          version: ${{ env.RELEASE_VERSION }}

      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build

      - name: Deploy (Windows)
        if: contains(env.RELEASE_VERSION, '.')
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ env.BUTLER_CREDENTIALS }}
          CHANNEL: windows
          ITCH_USER: ${{ secrets.BUTLER_USER }}
          ITCH_GAME: ${{ secrets.BUTLER_GAME }}
          PACKAGE: build/StandaloneWindows64
          VERSION: ${{ env.RELEASE_VERSION }}

      # - name: Deploy (MacOS)
      #   if: contains(env.RELEASE_VERSION, '.')
      #   uses: josephbmanley/butler-publish-itchio-action@master
      #   env:
      #     BUTLER_CREDENTIALS: ${{ env.BUTLER_CREDENTIALS }}
      #     CHANNEL: mac
      #     ITCH_USER: ${{ secrets.BUTLER_USER }}
      #     ITCH_GAME: ${{ secrets.BUTLER_GAME }}
      #     PACKAGE: build/StandaloneOSX
      #     VERSION: ${{ env.RELEASE_VERSION }}

      - name: Deploy (Linux)
        if: contains(env.RELEASE_VERSION, '.')
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ env.BUTLER_CREDENTIALS }}
          CHANNEL: linux
          ITCH_USER: ${{ secrets.BUTLER_USER }}
          ITCH_GAME: ${{ secrets.BUTLER_GAME }}
          PACKAGE: build/StandaloneLinux64
          VERSION: ${{ env.RELEASE_VERSION }}
